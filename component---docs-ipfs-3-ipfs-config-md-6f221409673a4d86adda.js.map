{"version":3,"sources":["webpack:///../docs/ipfs/3/ipfs-config.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","isMDXComponent"],"mappings":"kfAMO,IAAMA,EAAe,Q,4MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,UADR,UAGA,iBAAQ,CACN,GAAM,WADR,WAGA,6BAAY,mBAAGC,WAAW,KAAQ,CAC9B,KAAQ,kCADA,kCAGZ,sCAAqB,sBAAQA,WAAW,KAAnB,2CACrB,iBAAQ,CACN,GAAM,WADR,WAGA,qBAAG,mBAAKC,IAAI,eAAeC,IAAI,yFAC/B,uBAAK,sBAAMF,WAAW,OAAU,IAA3B,8CAEL,iBAAQ,CACN,GAAM,YADR,YAGA,iBAAQ,CACN,GAAM,QADR,QAGA,sCACA,qBAAG,mBAAKC,IAAI,YAAYC,IAAI,qFAC5B,iBAAQ,CACN,GAAM,QADR,QAGA,uBAAK,sBAAMF,WAAW,OAAU,IAA3B,+DAIL,2BAAU,0BAAYA,WAAW,KAAvB,oBAAV,+BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,0hIAmIL,iBAAQ,CACN,GAAM,QADR,QAGA,mDACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,gBAGL,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,kBAEL,qBAAG,mBAAKC,IAAI,oBAAoBC,IAAI,6FACpC,+CAA8B,sBAAQF,WAAW,KAAnB,aAA9B,aACA,sBACE,kBAAIA,WAAW,MAAf,mBACA,kBAAIA,WAAW,MAAf,cAEF,qBAAG,mBAAKC,IAAI,mBAAmBC,IAAI,4FACnC,2CACA,qBAAG,mBAAKD,IAAI,uBAAuBC,IAAI,+FACvC,iBAAQ,CACN,GAAM,gBADR,gBAGA,kDAAiC,0BAAYF,WAAW,KAAvB,QAAjC,QAA0F,0BAAYA,WAAW,KAAvB,UAA1F,MAAmJ,0BAAYA,WAAW,KAAvB,QAAnJ,qBACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,wLAIL,iBAAQ,CACN,GAAM,MADR,MAGA,8BAAa,mBAAGA,WAAW,KAAQ,CAC/B,KAAQ,gCADC,+BAAb,0BAGA,qBAAG,mBAAKC,IAAI,mBAAmBC,IAAI,4FACnC,iE,0MAKJN,EAAWO,gBAAiB","file":"component---docs-ipfs-3-ipfs-config-md-6f221409673a4d86adda.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/root/MyNotes-Webapp/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"ipfs配置\"\n    }}>{`IPFS配置`}</h1>\n    <h2 {...{\n      \"id\": \"ipfs-下载\"\n    }}>{`IPFS 下载`}</h2>\n    <p>{`下载地址：`}<a parentName=\"p\" {...{\n        \"href\": \"https://dist.ipfs.io/#go-ipfs\"\n      }}>{`https://dist.ipfs.io/#go-ipfs`}</a></p>\n    <p>{`本篇博客下载并使用的版本是：`}<strong parentName=\"p\">{`go-ipfs Version v0.4.13 for OS X 64bit`}</strong></p>\n    <h2 {...{\n      \"id\": \"ipfs-安装\"\n    }}>{`IPFS 安装`}</h2>\n    <p><img alt=\"ipfs_install\" src=\"http://daijiale-cn.oss-cn-hangzhou.aliyuncs.com/djl-blog-pic/ipfs/ipfs_install1.png\" /></p>\n    <pre><code parentName=\"pre\" {...{}}>{`ipfs --help  //打开命令行，输入，出现Log信息时，表示安装成功\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ipfs本地部署\"\n    }}>{`IPFS本地部署`}</h2>\n    <h3 {...{\n      \"id\": \"创建节点\"\n    }}>{`创建节点`}</h3>\n    <p>{`在本地全局目录下新建仓库：`}</p>\n    <p><img alt=\"ipfs_init\" src=\"http://daijiale-cn.oss-cn-hangzhou.aliyuncs.com/djl-blog-pic/ipfs/ipfs_init.png\" /></p>\n    <h3 {...{\n      \"id\": \"节点配置\"\n    }}>{`节点配置`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cd ~/.ipfs\nexport EDITOR=/usr/bin/vim\nipfs config edit\n`}</code></pre>\n    <p>{`执行完`}<inlineCode parentName=\"p\">{`ipfs config edit`}</inlineCode>{`后会打开一个ipfs节点配置文件，可以如下修改配置参数`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"Identity\":{\n        \"PeerID\":\"QmXXXXXXXXXXXXXXX\",\n        \"PrivKey\":\"XXXXXXXXXXXX\"\n    },\n    \"Datastore\":{\n        \"StorageMax\":\"10GB\",\n        \"StorageGCWatermark\":90,\n        \"GCPeriod\":\"1h\",\n        \"Spec\":{\n            \"mounts\":[\n                {\n                    \"child\":{\n                        \"path\":\"blocks\",\n                        \"shardFunc\":\"/repo/flatfs/shard/v1/next-to-last/2\",\n                        \"sync\":true,\n                        \"type\":\"flatfs\"\n                    },\n                    \"mountpoint\":\"/blocks\",\n                    \"prefix\":\"flatfs.datastore\",\n                    \"type\":\"measure\"\n                },\n                {\n                    \"child\":{\n                        \"compression\":\"none\",\n                        \"path\":\"datastore\",\n                        \"type\":\"levelds\"\n                    },\n                    \"mountpoint\":\"/\",\n                    \"prefix\":\"leveldb.datastore\",\n                    \"type\":\"measure\"\n                }\n            ],\n            \"type\":\"mount\"\n        },\n        \"HashOnRead\":false,\n        \"BloomFilterSize\":0\n    },\n    \"Addresses\":{\n        \"Swarm\":[\n            \"/ip4/0.0.0.0/tcp/4001\",\n            \"/ip6/::/tcp/4001\"\n        ],\n        \"Announce\":[\n\n        ],\n        \"NoAnnounce\":[\n\n        ],\n        \"API\":\"/ip4/127.0.0.1/tcp/5001\",\n        \"Gateway\":\"/ip4/127.0.0.1/tcp/8080\"\n    },\n    \"Mounts\":{\n        \"IPFS\":\"/ipfs\",\n        \"IPNS\":\"/ipns\",\n        \"FuseAllowOther\":false\n    },\n    \"Discovery\":{\n        \"MDNS\":{\n            \"Enabled\":true,\n            \"Interval\":10\n        }\n    },\n    \"Ipns\":{\n        \"RepublishPeriod\":\"\",\n        \"RecordLifetime\":\"\",\n        \"ResolveCacheSize\":128\n    },\n    \"Bootstrap\":[\n        \"/dnsaddr/bootstrap.libp2p.io/ipfs/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN\",\n        \"/dnsaddr/bootstrap.libp2p.io/ipfs/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa\",\n        \"/dnsaddr/bootstrap.libp2p.io/ipfs/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb\",\n        \"/dnsaddr/bootstrap.libp2p.io/ipfs/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt\",\n        \"/ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ\",\n        \"/ip4/104.236.179.241/tcp/4001/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM\",\n        \"/ip4/128.199.219.111/tcp/4001/ipfs/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu\",\n        \"/ip4/104.236.76.40/tcp/4001/ipfs/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64\",\n        \"/ip4/178.62.158.247/tcp/4001/ipfs/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd\",\n        \"/ip6/2604:a880:1:20::203:d001/tcp/4001/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM\",\n        \"/ip6/2400:6180:0:d0::151:6001/tcp/4001/ipfs/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu\",\n        \"/ip6/2604:a880:800:10::4a:5001/tcp/4001/ipfs/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64\",\n        \"/ip6/2a03:b0c0:0:1010::23:1001/tcp/4001/ipfs/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd\"\n    ],\n    \"Gateway\":{\n        \"HTTPHeaders\":{\n            \"Access-Control-Allow-Headers\":[\n                \"X-Requested-With\",\n                \"Range\"\n            ],\n            \"Access-Control-Allow-Methods\":[\n                \"GET\"\n            ],\n            \"Access-Control-Allow-Origin\":[\n                \"*\"\n            ]\n        },\n        \"RootRedirect\":\"\",\n        \"Writable\":false,\n        \"PathPrefixes\":[\n\n        ]\n    },\n    \"API\":{\n        \"HTTPHeaders\":null\n    },\n    \"Swarm\":{\n        \"AddrFilters\":null,\n        \"DisableBandwidthMetrics\":false,\n        \"DisableNatPortMap\":false,\n        \"DisableRelay\":false,\n        \"EnableRelayHop\":false,\n        \"ConnMgr\":{\n            \"Type\":\"basic\",\n            \"LowWater\":600,\n            \"HighWater\":900,\n            \"GracePeriod\":\"20s\"\n        }\n    },\n    \"Reprovider\":{\n        \"Interval\":\"12h\",\n        \"Strategy\":\"all\"\n    },\n    \"Experimental\":{\n        \"FilestoreEnabled\":false,\n        \"ShardingEnabled\":false,\n        \"Libp2pStreamMounting\":false\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"节点id\"\n    }}>{`节点ID`}</h3>\n    <p>{`每个节点都会存在一个唯一标识，查看节点ID方式如下：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\nipfs id\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"启动节点服务器\"\n    }}>{`启动节点服务器`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`ipfs daemon\n`}</code></pre>\n    <p><img alt=\"ipfs-daemon-error\" src=\"http://daijiale-cn.oss-cn-hangzhou.aliyuncs.com/djl-blog-pic/ipfs/ipfs-daemon-error.png\" /></p>\n    <p>{`出现了5001端口被占用的情况，这边可以通过对`}<strong parentName=\"p\">{`节点配置文件的修改`}</strong>{`来解决，如下所示：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`找到所有配置5001端口的地方`}</li>\n      <li parentName=\"ul\">{`替换成5002端口`}</li>\n    </ul>\n    <p><img alt=\"ipfs-config-edit\" src=\"http://daijiale-cn.oss-cn-hangzhou.aliyuncs.com/djl-blog-pic/ipfs/ipfs-config-edit.png\" /></p>\n    <p>{`再次启动节点，服务成功启动如下所示：`}</p>\n    <p><img alt=\"ipfs-run-successful.\" src=\"http://daijiale-cn.oss-cn-hangzhou.aliyuncs.com/djl-blog-pic/ipfs/ipfs-run-successful.png\" /></p>\n    <h3 {...{\n      \"id\": \"配置cors跨域资源共享\"\n    }}>{`配置CORS跨域资源共享`}</h3>\n    <p>{`为了方便后续前端的开发和数据访问，提前对跨域资源共享`}<inlineCode parentName=\"p\">{`CORS`}</inlineCode>{`进行配置，`}<inlineCode parentName=\"p\">{`ctrl-c`}</inlineCode>{` 退出`}<inlineCode parentName=\"p\">{`ipfs`}</inlineCode>{`，然后按照下面的步骤进行跨域配置：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '[\"PUT\", \"GET\", \"POST\", \"OPTIONS\"]'\n\nipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[\"*\"]'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"验证\"\n    }}>{`验证`}</h3>\n    <p>{`浏览器打开 `}<a parentName=\"p\" {...{\n        \"href\": \"http://localhost:5002/webui\"\n      }}>{`http://localhost:5002/webui`}</a>{` ，出现Web Console 图形化控制台`}</p>\n    <p><img alt=\"webui-connection\" src=\"http://daijiale-cn.oss-cn-hangzhou.aliyuncs.com/djl-blog-pic/ipfs/webui-connection.png\" /></p>\n    <p>{`这里可以看到所有run在主网上的节点信息，和本地节点相关的配置数据。`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}